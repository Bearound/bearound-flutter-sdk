name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  pre_release_validation:
    name: Pre-Release Validation
    runs-on: ubuntu-latest
    timeout-minutes: 15

    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.2'
        channel: 'stable'
        cache: true

    - name: Get version
      id: get_version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        fi

    - name: Get dependencies
      run: flutter pub get

    - name: Run all tests
      run: flutter test --coverage

    - name: Run analysis
      run: flutter analyze --fatal-infos

    - name: Validate pub.dev readiness
      run: flutter pub publish --dry-run

    - name: Verify changelog
      run: |
        if [ ! -f CHANGELOG.md ]; then
          echo "❌ CHANGELOG.md not found"
          exit 1
        fi
        if ! grep -q "## \[${{ steps.get_version.outputs.version }}\]" CHANGELOG.md; then
          echo "❌ Version ${{ steps.get_version.outputs.version }} not found in CHANGELOG.md"
          exit 1
        fi
        echo "✅ CHANGELOG.md is up to date"


  publish_to_pubdev:
    name: Publish to pub.dev
    runs-on: ubuntu-latest
    needs: [pre_release_validation]
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.2'
        channel: 'stable'
        cache: true

    - name: Get dependencies
      run: flutter pub get

    - name: Setup pub.dev credentials
      env:
        PUB_CREDENTIALS: ${{ secrets.PUB_CREDENTIALS }}
      run: |
        mkdir -p ~/.pub-cache
        echo "$PUB_CREDENTIALS" > ~/.pub-cache/pub-credentials.json

    - name: Publish to pub.dev
      run: flutter pub publish --force