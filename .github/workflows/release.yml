name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  # Job para validar que tudo est√° pronto para release
  pre_release_validation:
    name: Pre-Release Validation
    runs-on: ubuntu-latest
    timeout-minutes: 15

    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.2'
        channel: 'stable'
        cache: true

    - name: Get version
      id: get_version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        fi

    - name: Get dependencies
      run: flutter pub get

    - name: Run all tests
      run: flutter test --coverage

    - name: Run analysis
      run: flutter analyze --fatal-infos

    - name: Format code
      run: dart format --fix .

    - name: Validate pub.dev readiness
      run: flutter pub publish --dry-run

    - name: Verify changelog
      run: |
        if [ ! -f CHANGELOG.md ]; then
          echo "‚ùå CHANGELOG.md not found"
          exit 1
        fi
        if ! grep -q "## \[${{ steps.get_version.outputs.version }}\]" CHANGELOG.md; then
          echo "‚ùå Version ${{ steps.get_version.outputs.version }} not found in CHANGELOG.md"
          exit 1
        fi
        echo "‚úÖ CHANGELOG.md is up to date"

  # Job para publicar no pub.dev
  publish_to_pubdev:
    name: Publish to pub.dev
    runs-on: ubuntu-latest
    needs: [pre_release_validation]
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.2'
        channel: 'stable'
        cache: true

    - name: Get dependencies
      run: flutter pub get

    - name: Publish to pub.dev
      uses: k-paxian/dart-package-publisher@v1.5.1
      with:
        credentialJson: ${{ secrets.PUB_CREDENTIALS }}
        flutter: true
        skipTests: true

  # Job de notifica√ß√£o de sucesso
  release_success:
    name: Release Success Notification
    runs-on: ubuntu-latest
    needs: [pre_release_validation, publish_to_pubdev]
    if: always() && needs.publish_to_pubdev.result == 'success'

    steps:
    - name: Release completed successfully
      run: |
        echo "üéâ Release v${{ needs.pre_release_validation.outputs.version }} completed successfully!"
        echo "üöÄ pub.dev: Published"